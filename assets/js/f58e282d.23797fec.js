"use strict";(globalThis.webpackChunkweb=globalThis.webpackChunkweb||[]).push([[117],{5104:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"installing-clickhouse","title":"Installing ClickHouse","description":"To install ClickHouse, you can use ClickHouse Operator","source":"@site/docs/installing-clickhouse.md","sourceDirName":".","slug":"/installing-clickhouse","permalink":"/docs/installing-clickhouse","draft":false,"unlisted":false,"editUrl":"https://github.com/oteldb/web/tree/main/docs/installing-clickhouse.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installing OTelDB","permalink":"/docs/intro"}}');var s=o(4848),t=o(8453);const a={sidebar_position:2},c="Installing ClickHouse",l={},r=[{value:"Installing operator",id:"installing-operator",level:2},{value:"Creating simple instance",id:"creating-simple-instance",level:2},{value:"Accessing ClickHouse",id:"accessing-clickhouse",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"installing-clickhouse",children:"Installing ClickHouse"})}),"\n",(0,s.jsxs)(n.p,{children:["To install ClickHouse, you can use ",(0,s.jsx)(n.a,{href:"https://github.com/Altinity/clickhouse-operator",children:"ClickHouse Operator"}),"\nfrom ",(0,s.jsx)(n.a,{href:"https://altinity.com/",children:"Altinity"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"installing-operator",children:"Installing operator"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"helm repo add clickhouse-operator https://docs.altinity.com/clickhouse-operator/\nhelm upgrade ch clickhouse-operator/altinity-clickhouse-operator --install --namespace clickhouse --create-namespace\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-simple-instance",children:"Creating simple instance"}),"\n",(0,s.jsx)(n.p,{children:"Let's create simple ClickHouse instance optimized for low-memory environments,\nthat is not shared nor replicated."}),"\n",(0,s.jsxs)(n.p,{children:["Create ",(0,s.jsx)(n.code,{children:"chi.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: "clickhouse.altinity.com/v1"\nkind: "ClickHouseInstallation"\nmetadata:\n  name: "clickhouse"\n  namespace: "clickhouse"\nspec:\n  defaults:\n    templates:\n      dataVolumeClaimTemplate: data-volume-template\n      logVolumeClaimTemplate: log-volume-template\n  templates:\n    volumeClaimTemplates:\n      - name: data-volume-template\n        reclaimPolicy: Retain\n        spec:\n          accessModes:\n            - ReadWriteOnce\n          resources:\n            requests:\n              storage: 100Gi\n      - name: log-volume-template\n        spec:\n          accessModes:\n            - ReadWriteOnce\n          resources:\n            requests:\n              storage: 1Gi\n    podTemplates:\n      - name: clickhouse\n        spec:\n          containers:\n            - name: clickhouse\n              image: clickhouse/clickhouse-server:25.9\n              resources:\n                requests:\n                  memory: "4Gi"\n                  cpu: "100m"\n                limits:\n                  memory: "4Gi"\n                  cpu: "7000m"\n\n            - name: clickhouse-log\n              image: registry.access.redhat.com/ubi8/ubi-minimal:latest\n              command:\n                - "/bin/sh"\n                - "-c"\n                - "--"\n              args:\n                - "while true; do sleep 30; done;"\n  configuration:\n    users:\n      admin/password: admin\n      admin/profile: default\n      admin/quota: default\n      admin/networks/ip:\n        - 0.0.0.0/0\n      readonly/password: readonly_password\n      readonly/profile: readonly\n      readonly/quota: default\n      readonly/networks/ip:\n        - 0.0.0.0/0\n    profiles:\n      readonly/readonly: 1\n    settings:\n      compression/case/method: zstd\n      disable_internal_dns_cache: 1\n    files:\n      config.d/my_custom_settings.xml: |\n        <yandex>\n          <asynchronous_metric_log>0</asynchronous_metric_log>\n          <metric_log>0</metric_log>\n          <text_log>0</text_log>\n          <trace_log>0</trace_log>\n          <mark_cache_size>524288000</mark_cache_size>\n          <background_pool_size>2</background_pool_size>\n          <background_merges_mutations_concurrency_ratio>2</background_merges_mutations_concurrency_ratio>\n          <merge_tree>\n            <merge_max_block_size>1024</merge_max_block_size>\n            <max_bytes_to_merge_at_max_space_in_pool>1073741824</max_bytes_to_merge_at_max_space_in_pool> \x3c!-- 1 GB max part--\x3e\n            <number_of_free_entries_in_pool_to_lower_max_size_of_merge>2</number_of_free_entries_in_pool_to_lower_max_size_of_merge>\n            <number_of_free_entries_in_pool_to_execute_mutation>2</number_of_free_entries_in_pool_to_execute_mutation>\n            <number_of_free_entries_in_pool_to_execute_optimize_entire_partition>2</number_of_free_entries_in_pool_to_execute_optimize_entire_partition>\n          </merge_tree>\n        </yandex>\n    clusters:\n      - name: "default"\n        templates:\n          podTemplate: clickhouse\n        layout:\n          shardsCount: 1\n          replicasCount: 1\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"kubectl apply -f chi.yal"})," to create ClickHouse instance.\nYour ClickHouse server will be available with following DSN:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"clickhouse://admin:admin@chi-clickhouse-default-0-0.clickhouse:9000/default\n"})}),"\n",(0,s.jsx)(n.h2,{id:"accessing-clickhouse",children:"Accessing ClickHouse"}),"\n",(0,s.jsx)(n.p,{children:"Also, you can port-forward ClickHouse client to your local machine for easier access:"}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"Use"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"clickhouse-client --compression yes\n"})}),(0,s.jsx)(n.p,{children:"To access forwarded ClickHouse, as compression is disabled by default on localhost."})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl -n clickhouse port-forward svc/clickhouse-clickhouse 9000:9000 8123:8123\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var i=o(6540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);